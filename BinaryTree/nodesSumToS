import java.util.*;
public class Solution {

    /*	Binary Tree Node class
 * 
 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/

    public static void nodesSumToS(BinaryTreeNode<Integer> root, int sum) {
        // Write your code here
        if(root==null)
        {
            return;
        }
        ArrayList<Integer> toBeFilled=new ArrayList<Integer>();
        ArrayList<Integer> list=createList(root,toBeFilled);
        Collections.sort(list);
        int start=0;
        int end=list.size()-1;
        while(start<end)
        {
            if(list.get(start)+list.get(end)>sum)
            {
                end--;
            }
            else if(list.get(start)+list.get(end)<sum)
            {
                start++;
            }
            else {
                System.out.println(list.get(start)+" "+list.get(end));
                start++;
                end--;
            }
        }
    }
    public static ArrayList<Integer> createList(BinaryTreeNode<Integer> root,ArrayList<Integer> list){
        if(root==null)
        {
            return list;
        }
        createList(root.left,list);
        list.add(root.data);
        createList(root.right,list);

        return list;

    }
}
