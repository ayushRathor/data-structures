public class Solution {

/*	Binary Tree Node class
 * 
 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/
	
	public static void rootToLeafPathsSumToK(BinaryTreeNode<Integer> root, int k) {
		// Write your code here
        rootToLeafPathsSumToK(root,k,"");
		
	}
    public static void rootToLeafPathsSumToK(BinaryTreeNode<Integer> root, int k,String p) {
        if(root==null){
            return;
        }
        
        if(root.data==k && root.left==null && root.right==null)
        {
            p=p+root.data;
            System.out.println(p);
            return;
        }
        p=p+root.data+" ";
        rootToLeafPathsSumToK(root.left,k-root.data,p);
        rootToLeafPathsSumToK(root.right,k-root.data,p);
        
    }
}
