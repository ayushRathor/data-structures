import java.util.*;


public class Solution {

    /*	Binary Tree Node class
	 * 
	 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	 */

    public static void printZigZag(BinaryTreeNode<Integer> root) {
        if(root==null) return;
        Stack<BinaryTreeNode<Integer>> s1=new Stack();
        Stack<BinaryTreeNode<Integer>> s2=new Stack();
        s1.push(root);
        // System.out.print(!s2.isEmpty());
        while(!s1.isEmpty() || !s2.isEmpty())
        {
            
            while(!s1.isEmpty())
            {
                BinaryTreeNode<Integer> top1=s1.pop();
                
                System.out.print(top1.data+" ");
                if(top1.left!=null)
                {
                    s2.push(top1.left);
                }
                if(top1.right!=null)
                {
                    s2.push(top1.right);
                }
            }
            System.out.println();
            while(!s2.isEmpty())
            {
                BinaryTreeNode<Integer> top2=s2.pop();
                System.out.print(top2.data+" ");
                if(top2.right!=null)
                {
                    s1.push(top2.right);
                }
                if(top2.left!=null)
                {
                    s1.push(top2.left);
                }
            }
            System.out.println();
        }
        // Write your code here		

    }


}
