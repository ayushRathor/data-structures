
/*
class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}



}
* */
public class Solution {
	public static LinkedListNode<Integer> sortEvenOdd(LinkedListNode<Integer> head) {

        if(head==null || head.next==null){
            return head;
        }
        LinkedListNode<Integer> oddH=null;
        LinkedListNode<Integer> oddT=null;
        LinkedListNode<Integer> evenH=null;
        LinkedListNode<Integer> evenT=null;
        int flagOdd=0;
        int flagEven=0;
        while(head!=null){
            if(head.data%2!=0 && flagOdd==0){
                oddH=head;
                oddT=head;
                head=head.next;
                flagOdd++;
                continue;
            }
            if(head.data%2==0 && flagEven==0){
                evenH=head;
                evenT=head;
                head=head.next;
                flagEven++;
                continue;
            }
        if(head.data%2!=0 &&flagOdd>0){
                oddT.next=head;
                oddT=head;
            }
        
            if(head.data%2==0 && flagEven>0){
                evenT.next=head;
                evenT=head;
            }
            head=head.next;
        }
        if(head==null && oddH!=null &&evenT!=null)
        {
            oddT.next=evenH;
            evenT.next=null;
        }
        if(head==null && oddH==null)
        {
            return evenH;
        }
        return oddH;
        
	}
}
